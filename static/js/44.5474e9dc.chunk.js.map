{"version":3,"sources":["view/PageComponent/Auth/NewPass/View.js","view/PageComponent/Auth/NewPass/index.js","services/Connection/Request.js","services/Connection/Types.js","entity/Redux/Auth/api.js","entity/Redux/Auth/ForgetPasswrod/Action.js"],"names":["SetPassword","memo","props","dispatch","useDispatch","useEffect","repass","response","status","M","toast","html","setTimeout","window","location","pathname","useTranslation","t","i18n","className","id","type","name","onChange","e","localStorage","getItem","setItem","lan","$","is","lang","changeLanguage","style","right","src","marginTop","fontSize","marginBottom","hight","color","placeholder","autoComplete","required","onClick","fadeIn","fadeOut","newPass","val","SetNewPassword","connect","state","RePass","axiosRetry","axios","retries","API","retryDelay","exponentialDelay","request","create","baseURL","timeout","headers","SOCKET_URL","REQUEST_URL","TIMEOUT","FILE_CODE","RETRY_COUNT","JWT_TOKEN","GetToken","REQUEST_HEADER","REQUEST_HEADER_TOKEN","RequestApi","SignIn","data","Request","post","SignUp","VerifyCode","ForgetPassword","NewPassword","UserFirstData","put","DoctorAdd","AssistantAdd","Uploaded","RePassword","JsonData","JSON","stringify","phoneNumber","getState","a","then","error","catch","password"],"mappings":"yLAgBMA,EAAcC,gBAAK,SAACC,GAEtB,IAAMC,EAAWC,cAEjBC,qBAAU,WAOFH,EAAMI,QAE+B,MAAjCJ,EAAMI,OAAOC,SAASC,SACtBC,IAAEC,MAAM,CAACC,KAAM,2CAEfC,YAAW,WACPC,OAAOC,SAASC,SAAW,YAC5B,SAlBiB,MA2BdC,cAAXC,EA3ByB,EA2BzBA,EAAGC,EA3BsB,EA2BtBA,KA4DUD,EAAE,iBACtB,OACI,sBAAKE,UAAU,YAAf,UACI,qBAAKC,GAAG,eAER,qBAAKD,UAAU,UAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAGf,qBAAKA,UAAU,gBAAf,SACI,sBAAKC,GAAG,WAAR,UACI,sBAAKA,GAAG,gBAAR,UAEI,uBAAOC,KAAK,WAAWC,KAAK,YAAYC,SApCpE,SAAoBC,GAGXC,aAAaC,QAAQ,QACtBD,aAAaE,QAAQ,MAAO,MAGhC,IAAIC,EAAMH,aAAaC,QAAQ,OAChBG,IAAE,yBACJC,GAAG,aAAuB,OAARF,EAC3BH,aAAaE,QAAQ,MAAO,MAE5BF,aAAaE,QAAQ,MAAO,MAEhC,IAAII,EAAON,aAAaC,QAAQ,OAEhCR,EAAKc,eAAeD,IAoBkEX,GAAG,sBACjE,+BAAOH,EAAE,eAGb,qBAAKE,UAAS,gBAAd,SACI,qBAAKC,GAAE,eAAP,SACI,mBAAGD,UAAU,iBAAb,gCAGR,qBAAKA,UAAS,gBAAmBc,MAAO,CAACC,MAAO,GAAhD,SACI,qBAAKd,GAAE,iBAAP,SACI,qBAAKe,IAAI,+BAGjB,qBAAKhB,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UAGI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,sBAAsBc,MAAO,CAACG,UAAW,IAAxD,UACI,mBAAGhB,GAAG,WAAN,SAAkBH,EAAE,kBACpB,mBAAGG,GAAG,WAAWa,MAAO,CACpBI,SAAU,OACVD,UAAW,kBACXE,aAAc,mBAHlB,oBAKA,mBAAGlB,GAAG,WAAN,SAAkBH,EAAE,oBAS5B,sBAAKE,UAAU,qBAAqBC,GAAG,eAAea,MAAO,CAACM,MAAO,QAArE,UAGI,qBAAKnB,GAAG,eAAR,SAGI,qBAAKD,UAAU,+BAA+BC,GAAG,mBAAjD,SACI,sBAAKD,UAAU,kCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,oBAO/B,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QAIf,sBAAKA,UAAU,sBAAsBc,MAAO,CAACG,UAAW,GAAxD,UACI,oBAAGH,MAAO,CAACO,MAAO,QAAlB,qBAAwCvB,EAAE,gBAC1C,qBAAKG,GAAG,aAAR,SACI,uBAAOqB,YAAaxB,EAAE,kBAAmBK,KAAK,UACvCoB,aAAa,QACbC,UAAQ,EAACtB,KAAK,WAAWF,UAAU,eAE9C,oBAAGC,GAAG,UAAN,qBAA6BH,EAAE,sBAMnC,sBAAKE,UAAU,sBAAsBc,MAAO,CAACG,UAAW,GAAxD,UACI,oBAAGH,MAAO,CAACO,MAAO,QAAlB,qBAAwCvB,EAAE,mBAC1C,qBAAKG,GAAG,aAAR,SACI,uBAAOqB,YAAaxB,EAAE,cAAeK,KAAK,QACnCoB,aAAa,QACbC,UAAQ,EAACtB,KAAK,WAAWF,UAAU,eAE9C,oBAAGC,GAAG,UAAN,qBAA6BH,EAAE,sBAKnC,qBAAKE,UAAS,SAAYc,MAAO,CAACK,aAAc,IAAhD,SAEI,mBAAGnB,UAAU,iCACVyB,QA5JvD,WACIf,IAAE,iBAAiBgB,SACnBjC,YAAW,WACPiB,IAAE,iBAAiBiB,UAERrB,aAAaC,QAAQ,OAAhC,IAEIqB,EAAUlB,IAAE,uBAAuBmB,MAInCD,GAFQlB,IAAE,qBAAqBmB,MAI/B7C,EAAS8C,YAAeF,IAExBtC,IAAEC,MAAM,CAACC,KAAM,kCAEpB,MA4IgDS,GAAG,kBAFN,SAEyBH,EAAE,kCAsB/D,qBAAKE,UAAU,4BAiBpB+B,eAJS,SAACC,GACrB,MAAO,CAAC7C,OAAQ6C,EAAMC,UAGc,CAACH,oBAA1BC,CAA2ClD,GCnP3CC,0BAAK,WAChB,OACI,cAAC,EAAD,Q,iCCRR,mFAIAoD,IACIC,IACA,CACIC,QAASC,IACTC,WAAYJ,IAAWK,mBAGxB,IAAMC,EAAUL,IAAMM,OAAO,CAChCC,QAASL,IACTM,QAASN,IACTO,QAASP,MAMiBF,IAAMM,OAAO,CACvCC,QAASL,IACTM,QAASN,IACTO,QAASP,O,iCCvBb,0PAEaQ,EAAa,8BAIbC,EAAW,UAHA,mCAGA,OADD,MAGVC,GADY,UAAMD,EAAN,gBACF,KACVE,EAAY,kBACZC,EAAc,EACdC,EAAYC,cACZC,EAAiB,CAC1B,eAAgB,oBAEPC,EAAuB,CAChC,8BAA+B,IAE/B,eAAgB,mBAChB,cAAiB,UAAYH,I,gFCbpBI,EAAa,CAEtBC,OAAQ,SAACC,GAAD,OAAUC,IAAQC,KAAK,aAAcF,IAE7CG,OAAQ,SAACH,GAAD,OAAUC,IAAQC,KAAK,gBAAiBF,IAEhDI,WAAY,SAACJ,GAAD,OAAUC,IAAQC,KAAK,wBAAyBF,IAE5DK,eAAgB,SAACL,GAAD,OAAUC,IAAQC,KAAK,qCAAsCF,IAE7EM,YAAa,SAACN,GAAD,OAAUC,IAAQC,KAAK,qBAAsBF,IAE1DO,cAAe,SAACP,GAAD,OAAUC,IAAQO,IAAI,qBAAsBR,IAE3DS,UAAW,SAACT,GAAD,OAAUC,IAAQC,KAAK,UAAWF,IAE7CU,aAAc,SAACV,GAAD,OAAUC,IAAQC,KAAK,UAAWF,IAEhDW,SAAU,SAACX,GAAD,OAAUC,IAAQC,KAAK,eAAgBF,M,qKCjBxCY,EAAa,SAACZ,GAEvB,IAAMa,EAAWC,KAAKC,UAAU,CAC5BC,YAAahB,EAAKgB,cAItB,8CAAO,WAAOxF,EAAUyF,GAAjB,SAAAC,EAAA,sEAEGlC,IAAQqB,eAAeQ,GACxBM,MAAK,SAAAvF,GAEFJ,EAAS,CACLkB,KAAM,aACNd,SAAUA,OAGf,SAAAwF,GACCtF,IAAEC,MAAM,CAACC,KAAO,GAAGoF,EAAMxF,SAASoE,KAAKoB,WACxCC,OAAM,SAAAD,GACLtF,IAAEC,MAAM,CAACC,KAAO,wCAbrB,2CAAP,yDAkBSsC,EAAiB,SAAC0B,GAE3B,IAAMa,EAAWC,KAAKC,UAAU,CAC5BO,SAAUtB,IAGd,8CAAO,WAAOxE,EAAUyF,GAAjB,SAAAC,EAAA,sEACGlC,IAAQsB,YAAYO,GAErBM,MAAK,SAAAvF,GACFJ,EAAS,CACLI,SAAUA,EACVc,KAAM,mBAGX,SAAA0E,GACCtF,IAAEC,MAAM,CAACC,KAAM,GAAKoF,EAAMxF,SAASoE,KAAKoB,WACzCC,OAAM,SAAAD,GACLtF,IAAEC,MAAM,CAACC,KAAM,wCAZpB,2CAAP","file":"static/js/44.5474e9dc.chunk.js","sourcesContent":["//    -- in ghesamat marbout be edit password dar detail profile ast\r\n//    -- password jadid daryaft mishavad va set mishavad dar db\r\n\r\nimport React, {memo, useEffect} from 'react';\r\n// translate library\r\nimport {useTranslation} from \"react-i18next\";\r\n// materilzie library brayr js code hai materilize\r\nimport M from 'materialize-css';\r\n// action setNewPassword baray set kardan password jadid\r\nimport {SetNewPassword} from \"../../../../entity/Redux/Auth/ForgetPasswrod/Action\";\r\n// jquery library\r\nimport $ from 'jquery';\r\n// react-redux library\r\nimport {connect, useDispatch} from \"react-redux\";\r\n\r\n// functional component baray set new password\r\nconst SetPassword = memo((props) => {\r\n\r\n    const dispatch = useDispatch(); // sakht object as useDsiapatch\r\n    // ejra bad az load component\r\n    useEffect(() => {\r\n\r\n        {/*\r\n            -- new pass response\r\n            -- check kardan response ersali az reducer\r\n        */\r\n        }\r\n        if (props.repass) {\r\n            // check kardan response\r\n            if (props.repass.response.status === 200) {\r\n                M.toast({html: 'please wait for redirect to signin ...'})\r\n                // set kardan timeout baray redirect page\r\n                setTimeout(() => {\r\n                    window.location.pathname = \"/signin\"\r\n                }, 2000)\r\n            }\r\n        }\r\n    })\r\n\r\n    //   end new pass response\r\n\r\n\r\n    // functional translte\r\n    const {t, i18n} = useTranslation();\r\n\r\n\r\n    {\r\n        /*\r\n            -- check password\r\n            -- check va save password ba dispatch kardan function SetNewPassword\r\n         */\r\n    }\r\n\r\n    function verify_code() {\r\n        $(\"#loading_back\").fadeIn()\r\n        setTimeout(function () {\r\n            $(\"#loading_back\").fadeOut();\r\n            // props.history.push('/doctor');\r\n            var type = localStorage.getItem(\"rol\");\r\n            // daryaft value input newPass\r\n            var newPass = $(\"input[name=newPass]\").val();\r\n            // daryaft value input rePass\r\n            var reNew = $(\"input[name=reNew]\").val();\r\n            // check equal boodan passwords\r\n            if (newPass == reNew) {\r\n                // dispatch kardan action setNewPassword\r\n                dispatch(SetNewPassword(newPass));\r\n            } else {\r\n                M.toast({html: 'Passwords are not the same!'})\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    //  end check password\r\n\r\n    {/*\r\n    -- language\r\n    -- do zabaneh kardan site\r\n    */\r\n    }\r\n\r\n    function handleLang(e) {\r\n        // e.preventDefault();\r\n        // sabt type language dar storage\r\n        if (!localStorage.getItem(\"lan\")) {\r\n            localStorage.setItem(\"lan\", 'en');\r\n        }\r\n        //daryaft type language as localstorage\r\n        var lan = localStorage.getItem(\"lan\");\r\n        var ckeckbox = $(\"input[name=cahngelan]\");\r\n        if (ckeckbox.is(\":checked\") && lan === 'en') {\r\n            localStorage.setItem(\"lan\", 'ch');\r\n        } else {\r\n            localStorage.setItem(\"lan\", 'en');\r\n        }\r\n        let lang = localStorage.getItem('lan');\r\n        // gharar dadan language dar library translate\r\n        i18n.changeLanguage(lang);\r\n    }\r\n\r\n// end language\r\n\r\n\r\n    const select_type = t('select-type.l');\r\n    return (\r\n        <div className=\"auth_back\">\r\n            <div id=\"back_shado\"></div>\r\n\r\n            <div className=\"col s12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col l2 m2 s1\">\r\n\r\n                    </div>\r\n                    <div className=\"col l8 m8 s10\">\r\n                        <div id=\"auth_box\">\r\n                            <div id=\"change_or_sub\">\r\n                                {/* chack box baray change language*/}\r\n                                <input type=\"checkbox\" name=\"cahngelan\" onChange={handleLang} id=\"change_lang_login\"/>\r\n                                <span>{t('Lang.l')}</span>\r\n                                {/*<span></span>*/}\r\n                            </div>\r\n                            <div className={`mini_box_over`}>\r\n                                <div id={`mini_circule`}>\r\n                                    <i className=\"material-icons\">person_outline</i>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`mini_box_over`} style={{right: 0}}>\r\n                                <div id={`mini_circule_r`}>\r\n                                    <img src=\"/img/icons/doctorB.png\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\" style={{marginTop: 55}}>\r\n                                            <p id=\"text_sub\">{t('Welcome-to.l')}</p>\r\n                                            <p id=\"text_sub\" style={{\r\n                                                fontSize: \"40px\",\r\n                                                marginTop: \"15px !important\",\r\n                                                marginBottom: \"15px !important\"\r\n                                            }}>Bi Con</p>\r\n                                            <p id=\"text_sub\">{t('NewPass.l')}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*\r\n                                        -- new password form\r\n                                        -- form daryaft etelaat marboot be password\r\n                                    */}\r\n\r\n                                    <div className=\"register_type_user\" id=\"verifyBorder\" style={{hight: \"auto\"}}>\r\n\r\n\r\n                                        <div id=\"loading_back\">\r\n\r\n\r\n                                            <div className=\"preloader-wrapper big active\" id=\"loading_progress\">\r\n                                                <div className=\"spinner-layer spinner-blue-only\">\r\n                                                    <div className=\"circle-clipper left\">\r\n                                                        <div className=\"circle\"></div>\r\n                                                    </div>\r\n                                                    <div className=\"gap-patch\">\r\n                                                        <div className=\"circle\"></div>\r\n                                                    </div>\r\n                                                    <div className=\"circle-clipper right\">\r\n                                                        <div className=\"circle\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col s12\">\r\n                                                    <div className=\"row\">\r\n\r\n                                                    </div>\r\n                                                    {/* input password */}\r\n                                                    <div className=\"input-field col s12\" style={{marginTop: 0}}>\r\n                                                        <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('NewPass.l')}</p>\r\n                                                        <div id=\"input_back\">\r\n                                                            <input placeholder={t('NewPassWrite.l')} name=\"newPass\"\r\n                                                                   autoComplete=\"false\"\r\n                                                                   required type=\"password\" className=\"validate\"/>\r\n                                                        </div>\r\n                                                        <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\r\n\r\n                                                        {/*<label htmlFor=\"password\">Password</label>*/}\r\n                                                    </div>\r\n\r\n                                                    {/*input rePass tekrar password balaei*/}\r\n                                                    <div className=\"input-field col s12\" style={{marginTop: 0}}>\r\n                                                        <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('RNewPasses.l')}</p>\r\n                                                        <div id=\"input_back\">\r\n                                                            <input placeholder={t('RNewPass.l')} name=\"reNew\"\r\n                                                                   autoComplete=\"false\"\r\n                                                                   required type=\"password\" className=\"validate\"/>\r\n                                                        </div>\r\n                                                        <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\r\n\r\n                                                        {/*<label htmlFor=\"password\">Password</label>*/}\r\n                                                    </div>\r\n\r\n                                                    <div className={`col s6`} style={{marginBottom: 20}}>\r\n                                                        {/*<Link to=\"/login/verify\">*/}\r\n                                                        <a className=\"btn blue darken-4 waves-effect\"\r\n                                                           onClick={verify_code}\r\n                                                           id=\"check_phone_num\">{t('Save.l')}</a>\r\n                                                        {/*</Link>*/}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    {/*    --  end new password form    */}\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col l2 m2 s1\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\n// get kardat state ha az reducer\r\nconst mapStateToProps = (state) => {\r\n    return {repass: state.RePass}\r\n}\r\n// connect action va state be component bala\r\nexport default connect(mapStateToProps, {SetNewPassword})(SetPassword);","//    -- farakhani , return file view\r\n//    -- baray clean code va ersal propsha estefadeh mishavad\r\n\r\nimport React, {memo} from 'react';\r\nimport NewPass from './View';\r\n// return kardan view NewPass\r\nexport default memo(() => {\r\n    return (\r\n        <NewPass></NewPass>\r\n    )\r\n})","import * as API from './Types';\r\nimport axios from \"axios\";\r\nimport axiosRetry from \"axios-retry\";\r\n\r\naxiosRetry(\r\n    axios,\r\n    {\r\n        retries: API.RETRY_COUNT,\r\n        retryDelay: axiosRetry.exponentialDelay\r\n    }\r\n);\r\nexport const request = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER_TOKEN\r\n});\r\n\r\n\r\n\r\n\r\nexport const request_global = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER\r\n});","import {GetToken} from \"../Authentication\";\r\n\r\nexport const SOCKET_URL = \"http://188.34.138.109:7000/\";\r\nexport const BASE_URL = \"http://185.235.43.243:3000/api/\";\r\n// export const BASE_URL_CDN = \"http://188.34.138.109:8000/api/\";\r\nexport const VERSION = \"v1\";\r\nexport const REQUEST_URL = `${BASE_URL}${VERSION}`;\r\nexport const UPLOADED_URL = `${REQUEST_URL}/auth/upload`;\r\nexport const TIMEOUT = 60000;\r\nexport const FILE_CODE = \"clinic_img_1254\";\r\nexport const RETRY_COUNT = 3;\r\nexport const JWT_TOKEN = GetToken();\r\nexport const REQUEST_HEADER = {\r\n    'Content-Type': 'application/json'\r\n}\r\nexport const REQUEST_HEADER_TOKEN = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    // 'mode' : 'no-cors',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': \"Bearer \" + JWT_TOKEN\r\n}","import {request as Request, requestFile} from \"../../../services/Connection/Request\";\r\nimport {Path as Api} from \"./Types\";\r\n\r\n\r\n//\r\n\r\nexport const RequestApi = {\r\n    // ersal data be api login\r\n    SignIn: (data) => Request.post(\"auth/login\", data),\r\n    //ersal data be api register\r\n    SignUp: (data) => Request.post(\"auth/register\", data),\r\n    //ersal data be verifyActiveCode\r\n    VerifyCode: (data) => Request.post(\"auth/verifyActiveCode\", data),\r\n    // ersal data be api forgotPassword/sendActiveCode\r\n    ForgetPassword: (data) => Request.post(\"auth/forgotPassword/sendActiveCode\", data),\r\n    // ersal data be api resetPassword\r\n    NewPassword: (data) => Request.post(\"auth/resetPassword\", data),\r\n    // ersal data be api updateDetails\r\n    UserFirstData: (data) => Request.put(\"auth/updateDetails\", data),\r\n    // ersal data be api doctors\r\n    DoctorAdd: (data) => Request.post(\"doctors\", data),\r\n// ersal data be api doctors\r\n    AssistantAdd: (data) => Request.post(\"doctors\", data),\r\n    // uploaded file\r\n    Uploaded: (data) => Request.post(\"/auth/upload\", data),\r\n  \r\n}","//    -- action shamel functionhaei ast ke be request vasl mishavad\r\nimport React, {memo} from 'react';\r\nimport {RequestApi as request} from \"../api\";\r\nimport M from \"materialize-css\";\r\n// objecti shamel apiha\r\n\r\n// action marbout be Reset password\r\nexport const RePassword = (data) => {\r\n    // json kardan data form\r\n    const JsonData = JSON.stringify({\r\n        phoneNumber: data.phoneNumber,\r\n    });\r\n\r\n// ersal etellat be samt server va dispatch khoroji be samt reducer\r\n    return async (dispatch, getState) => {\r\n        // ersal data be method marbut be api forgetPassword\r\n        await request.ForgetPassword(JsonData)\r\n            .then(response => {\r\n                // dispatch kardan zamani ke response ok bood\r\n                dispatch({\r\n                    type: 'RE_PASS_OK',\r\n                    response: response\r\n                })\r\n                // dispatch kardan zamani ke response error bood\r\n            }, error =>{\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : 'Network has error! try again ...'})\r\n            })\r\n    }\r\n}\r\n// action setNewpassword baray set kardan password jadid\r\nexport const SetNewPassword = (data) => {\r\n    // json kardan data form\r\n    const JsonData = JSON.stringify({\r\n        password: data\r\n    });\r\n    // ersal etellat be samt server va dispatch khoroji be samt reducer\r\n    return async (dispatch, getState) => {\r\n        await request.NewPassword(JsonData)\r\n            // dispatch kardan zamini ke response ok bo\r\n            .then(response => {\r\n                dispatch({\r\n                    response: response,\r\n                    type: 'NEW_PASS_OK'\r\n                    // dispatch kardan zamini ke response error bod\r\n                })\r\n            }, error => {\r\n                M.toast({html: \"\" + error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html: 'Network has error! try again ...'})\r\n            })\r\n    }\r\n}"],"sourceRoot":""}