{"version":3,"sources":["view/PageComponent/Auth/ForgetPassword/View.js","view/PageComponent/Auth/ForgetPassword/index.js","services/Connection/Request.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/Connection/Types.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","entity/Redux/Auth/api.js","entity/Redux/Auth/SignUp/Action.js","entity/Redux/Auth/ForgetPasswrod/Action.js"],"names":["connect","state","RePass","Verify","Auth","RePassword","VerifyCode","props","useTranslation","t","i18n","dispatch","useDispatch","useState","registerData","setRegisterData","codeVerify","setCodeVerify","useEffect","token","localStorage","setItem","TOKEN_KEY","window","location","pathname","response","data","statusCode","$","css","M","toast","html","elems","document","querySelectorAll","Tabs","init","tabh","FormSelect","body","on","e","key","which","sib","target","next","preventDefault","length","find","eq","select","focus","verifyCodeGet","name","value","className","id","style","width","type","onChange","getItem","lan","is","lang","changeLanguage","right","src","marginTop","fontSize","marginBottom","height","color","placeholder","autoComplete","min","max","pattern","phoneNumber","val","userType","inputRegisterChange","required","onClick","fadeIn","alert","setTimeout","fadeOut","textTransform","onSubmit","handleCheckFormVerify","maxLength","size","memo","axiosRetry","axios","retries","API","retryDelay","exponentialDelay","request","create","baseURL","timeout","headers","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","done","push","err","unsupportedIterableToArray","TypeError","SOCKET_URL","REQUEST_URL","TIMEOUT","FILE_CODE","RETRY_COUNT","JWT_TOKEN","GetToken","REQUEST_HEADER","REQUEST_HEADER_TOKEN","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","_arrayLikeToArray","len","arr2","RequestApi","SignIn","Request","post","SignUp","ForgetPassword","NewPassword","UserFirstData","put","DoctorAdd","AssistantAdd","Uploaded","formData","JsonData","JSON","stringify","accountType","getState","a","then","error","catch","code","code_1","code_2","code_3","code_4","SetData","fullName","fullname","password","FitDataDoctor","files","filePath","isAssistant","educationDegree","educationField","needAssistant","attachment","grade","commissionRate","assistant","description","doctorsId","removeItem","FitDataAssistant","doctors","dataUser","console","log","parse","responseAssis","UploadedFile","file","SetNewPassword"],"mappings":"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","file":"static/js/32.711c2ea5.chunk.js","sourcesContent":["\r\n//    -- baray bazgardani password estefadeh mishavad\r\n\r\nimport React, {useState, useEffect} from 'react';\r\n    // translation library\r\nimport {useTranslation} from \"react-i18next\";\r\n// jquery library\r\nimport $ from 'jquery';\r\n// redux components\r\nimport {useDispatch} from \"react-redux\";\r\n// import action verifycode\r\nimport {VerifyCode} from \"../../../../entity/Redux/Auth/SignUp/Action\";\r\n// import action RePassword\r\nimport {RePassword} from \"../../../../entity/Redux/Auth/ForgetPasswrod/Action\";\r\n// componet connect baray connect action state ba component jari\r\nimport {connect} from \"react-redux\";\r\n// materilize library\r\nimport M from 'materialize-css';\r\n// key static baray token\r\nimport {TOKEN_KEY} from \"../../../../services/Authentication/Types\";\r\n\r\n// taghir password dar soorat faramooshi passwor\r\nfunction RePass(props) {\r\n    // translate component\r\n    const {t, i18n} = useTranslation();\r\n    const dispatch = useDispatch(); // sakht object as useDispatch\r\n    const [registerData, setRegisterData] = useState({}) // state baray regiseter data\r\n    const [codeVerify, setCodeVerify] = useState({}) // state braye verify data\r\n\r\n    // bad az ejray col component ejra mishavad\r\n    // codehai materilize , jquer behtar ast inja ejra shavand\r\n    useEffect(() => {\r\n\r\n        {/*\r\n            -- dispatch action\r\n            -- bad az dispatch shodan action marbout be passwor response function dar inja barrasi mishavad\r\n            -- motanaseb ba response khoroji dadeh mishavad\r\n        */}\r\n\r\n        if (props.Verify.token) {\r\n            localStorage.setItem(TOKEN_KEY, props.Verify.token); // set kardan token dar soorat ok boodan response\r\n            window.location.pathname=\"/newpass\" //\r\n        }\r\n\r\n        // check kardan response hasel as check phone number va ersal verify code baray edameh marhale repss\r\n        if (props.RePass.response) {\r\n            if (props.RePass.response.data) {\r\n                if (props.RePass.response.data.statusCode === 200) {\r\n                    $(\"#repass_\").css({\"left\": \"-100%\"}); // if verify code ersal shodeh bood form verify namayesh dadeh mishavad\r\n                    M.toast({html: 'verify code is : ' + props.RePass.response.data.data})\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n         //   end dispatch action\r\n\r\n\r\n         // materilize code js baray tabs\r\n        var elems = document.querySelectorAll('.tabs');\r\n        M.Tabs.init(elems);\r\n        // materilize code js baray select\r\n        var tabh = document.querySelectorAll('select');\r\n        M.FormSelect.init(tabh);\r\n        var body = $('#wrapper');\r\n\r\n\r\n        {/*\r\n\r\n            -- verify code (jquery style)\r\n            -- code jquery baraye daryaft jodaganeh number\r\n\r\n        */}\r\n\r\n        // check kardan daryaft number dar inputhai verify code , paresh be input badi\r\n        function goToNextInput(e) {\r\n            var key = e.which,\r\n                t = $(e.target),\r\n                sib = t.next('input');\r\n            if (key != 9 && (key < 48 || key > 57)) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n            if (key === 9) {\r\n                return true;\r\n            }\r\n            if (!sib || !sib.length) {\r\n                sib = body.find('input').eq(0);\r\n            }\r\n            sib.select().focus();\r\n        }\r\n\r\n        // check kardan vard shodan number baray raftan be input badi\r\n        function onKeyDown(e) {\r\n            var key = e.which;\r\n\r\n            if (key === 9 || (key >= 48 && key <= 57)) {\r\n                return true;\r\n            }\r\n\r\n            e.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        // check kardan focus in input\r\n        function onFocus(e) {\r\n            $(e.target).select();\r\n        }\r\n\r\n\r\n        // transaction hai input\r\n        body.on('keyup', 'input', goToNextInput);\r\n        body.on('keydown', 'input', onKeyDown);\r\n        body.on('click', 'input', onFocus);\r\n\r\n        //   end verify form jquery\r\n\r\n    })\r\n\r\n\r\n    {/*\r\n    -- language\r\n    -- do zabaneh kardan site\r\n    */\r\n    }\r\n\r\n    function handleLang(e) {\r\n        // e.preventDefault();\r\n        // sabt type language dar storage\r\n        if (!localStorage.getItem(\"lan\")) {\r\n            localStorage.setItem(\"lan\", 'en');\r\n        }\r\n        //daryaft type language as localstorage\r\n        var lan = localStorage.getItem(\"lan\");\r\n        var ckeckbox = $(\"input[name=cahngelan]\");\r\n        if (ckeckbox.is(\":checked\") && lan === 'en') {\r\n            localStorage.setItem(\"lan\", 'ch');\r\n        } else {\r\n            localStorage.setItem(\"lan\", 'en');\r\n        }\r\n        let lang = localStorage.getItem('lan');\r\n        // gharar dadan language dar library translate\r\n        i18n.changeLanguage(lang);\r\n    }\r\n\r\n// end language\r\n\r\n\r\n\r\n\r\n    {/*\r\n\r\n        --  register input data set\r\n        --  bad az change shodan value har input on value inja set mishe dakhel state\r\n\r\n    */}\r\n    function inputRegisterChange(e) {\r\n        var phoneNumber = $(\"input[name=phoneNumber]\").val();\r\n        localStorage.setItem(\"phone\", phoneNumber);\r\n        var userType = $(\"input[name=doctor]:checked\").val();\r\n        localStorage.setItem(\"rols\", userType);\r\n        setRegisterData({\r\n            ...registerData,\r\n            phoneNumber: phoneNumber,\r\n            userType: userType\r\n        })\r\n    }\r\n\r\n    // end register input data set\r\n\r\n\r\n\r\n    {/*\r\n        -- verify code\r\n        -- check code daryafti 4 raghamai\r\n    */}\r\n    function verify_code() {\r\n        $(\"#loading_back\").fadeIn()\r\n        // set kardan register data dar state codeverify\r\n        setCodeVerify({\r\n            ...codeVerify,\r\n            phoneNumber: registerData.phoneNumber\r\n        })\r\n        var phoneNumber = registerData.phoneNumber;\r\n        // check kardan null nabodan phone number\r\n        if (phoneNumber == \"\" || phoneNumber == null) {\r\n            alert(\"phone number must filled\");\r\n        } else {\r\n            setTimeout(function () {\r\n                $(\"#loading_back\").fadeOut();\r\n                // dispatch kardan action RePassword\r\n                dispatch(RePassword(registerData))\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    //  end verify code\r\n\r\n    const [verifyJsonData, setVerifyJsonData] = useState({})\r\n\r\n\r\n    {/*\r\n\r\n        -- password\r\n        -- set kardan password jadid , dispatch kardan function marboot be un\r\n    */}\r\n    function handleCheckFormVerify(e) {\r\n        e.preventDefault();\r\n        // dispatch kardan verifyCode\r\n        dispatch(VerifyCode(codeVerify))\r\n    }\r\n\r\n    //   end password\r\n\r\n\r\n\r\n    {/*\r\n        -- verfiy set code\r\n        -- daryaft code verify be soorat tak tak va set kardan unha dar state\r\n    */}\r\n    function verifyCodeGet(e) {\r\n        setCodeVerify({\r\n            ...codeVerify,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //  end verify set\r\n\r\n    const select_type = t('select-type.l');\r\n    return (\r\n        <div className=\"auth_back\">\r\n            <div id=\"back_shado\"></div>\r\n            <div className=\"col s12\">\r\n                <div className=\"col s1 m3 l4\">\r\n\r\n                </div>\r\n                <div className=\"col s10 m6 l4\">\r\n\r\n                    <div id=\"auth_box\" style={{width: '24rem'}}>\r\n                        <div id=\"change_or_sub\">\r\n                            <input type=\"checkbox\" name=\"cahngelan\" onChange={handleLang} id=\"change_lang_login\"/>\r\n                            <span>{t('Lang.l')}</span>\r\n                            {/*<span></span>*/}\r\n                        </div>\r\n\r\n                        <div className={`mini_box_over`}>\r\n                            <div id={`mini_circule`}>\r\n                                <i className=\"material-icons\">person_outline</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mini_box_over`} style={{right: 0}}>\r\n                            <div id={`mini_circule_r`}>\r\n                                <img src=\"/img/icons/doctorB.png\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\" style={{marginTop: 55}}>\r\n                                        <p id=\"text_sub\">{t('Welcome-to.l')}</p>\r\n                                        <p id=\"text_sub\" style={{\r\n                                            fontSize: \"40px\",\r\n                                            marginTop: \"15px !important\",\r\n                                            marginBottom: \"15px !important\"\r\n                                        }}>Bi Con</p>\r\n                                        <p id=\"text_sub\">{t('ForgetPasswrod.l')}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"register_type_user\" id=\"verifyBorder\" style={{height: '210px'}}>\r\n\r\n\r\n                                    <div id=\"loading_back\">\r\n\r\n\r\n                                        <div className=\"preloader-wrapper big active\" id=\"loading_progress\">\r\n                                            <div className=\"spinner-layer spinner-blue-only\">\r\n                                                <div className=\"circle-clipper left\">\r\n                                                    <div className=\"circle\"></div>\r\n                                                </div>\r\n                                                <div className=\"gap-patch\">\r\n                                                    <div className=\"circle\"></div>\r\n                                                </div>\r\n                                                <div className=\"circle-clipper right\">\r\n                                                    <div className=\"circle\"></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div id=\"repass_\">\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col s6\">\r\n                                                    {/*\r\n                                                        input phone number\r\n                                                    */}\r\n                                                    <div className=\"input-field col s12\" style={{marginTop: 0}}>\r\n                                                        <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('Phone-num.l')}</p>\r\n                                                        <div id=\"input_back\">\r\n                                                            <input placeholder={t('U-phone-num.l')} autoComplete=\"false\"\r\n                                                                   name=\"phoneNumber\"\r\n                                                                   min=\"0\" max=\"9\"\r\n                                                                   pattern=\"[0-9]{1}\"\r\n                                                                   onChange={e => inputRegisterChange(e)}\r\n                                                                   required type=\"text\" className=\"validate\"/>\r\n                                                        </div>\r\n                                                        <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\r\n                                                        {/*<label htmlFor=\"password\">Password</label>*/}\r\n                                                    </div>\r\n                                                    <div className={`col s6`}>\r\n                                                        {/*<Link to=\"/login/verify\">*/}\r\n                                                        <a className=\"btn blue darken-4 waves-effect\"\r\n                                                           onClick={verify_code}\r\n                                                           style={{textTransform: 'unset !important'}}\r\n                                                           id=\"check_phone_num\">{t('SignUp.l')}</a>\r\n                                                        {/*</Link>*/}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <form onSubmit={e => handleCheckFormVerify(e)}>\r\n                                                    <div className=\"col s6\">\r\n                                                        <div className=\"input-field col s12\" style={{marginTop: 0}}>\r\n                                                            <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('Verify.l')}</p>\r\n\r\n                                                            <div id=\"wrapper\">\r\n                                                                <div id=\"dialog\">\r\n\r\n\r\n                                                                    {/*\r\n                                                                        -- verify form\r\n                                                                  */}\r\n\r\n                                                                    <div id=\"form\">\r\n                                                                        <input type=\"text\" placeholder=\"--\"\r\n                                                                               maxLength=\"1\"\r\n                                                                               size=\"1\"\r\n                                                                               name=\"code_1\"\r\n                                                                               onChange={e => verifyCodeGet(e)}\r\n                                                                               min=\"0\" max=\"9\"\r\n                                                                               pattern=\"[0-9]{1}\"/>\r\n                                                                        <input type=\"text\" placeholder=\"--\"\r\n                                                                               maxLength=\"1\"\r\n                                                                               size=\"1\"\r\n                                                                               onChange={e => verifyCodeGet(e)}\r\n                                                                               name=\"code_2\"\r\n                                                                               min=\"0\" max=\"9\"\r\n                                                                               pattern=\"[0-9]{1}\"/>\r\n                                                                        <input type=\"text\" placeholder=\"--\"\r\n                                                                               maxLength=\"1\"\r\n                                                                               size=\"1\"\r\n                                                                               onChange={e => verifyCodeGet(e)}\r\n                                                                               name=\"code_3\"\r\n                                                                               min=\"0\" max=\"9\"\r\n                                                                               pattern=\"[0-9]{1}\"/>\r\n                                                                        <input type=\"text\" placeholder=\"--\"\r\n                                                                               maxLength=\"1\"\r\n                                                                               size=\"1\"\r\n                                                                               name=\"code_4\"\r\n                                                                               min=\"0\" max=\"9\"\r\n                                                                               onChange={e => verifyCodeGet(e)}\r\n                                                                               pattern=\"[0-9]{1}\"/>\r\n\r\n\r\n                                                                    </div>\r\n\r\n\r\n                                                                    {/* end verify form  */}\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n                                                            <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\r\n\r\n                                                            {/*<label htmlFor=\"password\">Password</label>*/}\r\n                                                        </div>\r\n\r\n                                                        <div className={`col s6`}>\r\n                                                            {/*<NavLink to={{pathname : '/login/verify' }}>*/}\r\n                                                            <button type=\"submit\"\r\n                                                                    style={{textTransform: 'unset !important'}}\r\n                                                                    id=\"check_code\"\r\n                                                                    className=\"btn blue darken-4 waves-effect\">{t('check.l')}</button>\r\n                                                            {/*</NavLink>*/}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                </form>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col s1 m3 l4\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n// daryaft stateha az reducer\r\nconst mapStateToProps = (state) => {\r\n    return {RePass: state.RePass, Verify: state.Auth}\r\n}\r\n// connect kardan action - state be component bala\r\nexport default connect(mapStateToProps, {RePassword, VerifyCode})(RePass);","//      -- farakhani , return file view\r\n//        -- baray clean code va ersal propsha estefadeh mishavad\r\n\r\n\r\nimport React, {memo} from 'react';\r\nimport RePass from \"./View\";\r\n// return kardan view RePass\r\nexport default memo(() => {\r\n    return (\r\n        <RePass>\r\n\r\n        </RePass>\r\n    )\r\n})\r\n\r\n","import * as API from './Types';\r\nimport axios from \"axios\";\r\nimport axiosRetry from \"axios-retry\";\r\n\r\naxiosRetry(\r\n    axios,\r\n    {\r\n        retries: API.RETRY_COUNT,\r\n        retryDelay: axiosRetry.exponentialDelay\r\n    }\r\n);\r\nexport const request = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER_TOKEN\r\n});\r\n\r\n\r\n\r\n\r\nexport const request_global = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER\r\n});","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {GetToken} from \"../Authentication\";\r\n\r\nexport const SOCKET_URL = \"http://188.34.138.109:7000/\";\r\nexport const BASE_URL = \"http://185.235.43.243:3000/api/\";\r\n// export const BASE_URL_CDN = \"http://188.34.138.109:8000/api/\";\r\nexport const VERSION = \"v1\";\r\nexport const REQUEST_URL = `${BASE_URL}${VERSION}`;\r\nexport const UPLOADED_URL = `${REQUEST_URL}/auth/upload`;\r\nexport const TIMEOUT = 60000;\r\nexport const FILE_CODE = \"clinic_img_1254\";\r\nexport const RETRY_COUNT = 3;\r\nexport const JWT_TOKEN = GetToken();\r\nexport const REQUEST_HEADER = {\r\n    'Content-Type': 'application/json'\r\n}\r\nexport const REQUEST_HEADER_TOKEN = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    // 'mode' : 'no-cors',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': \"Bearer \" + JWT_TOKEN\r\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import {request as Request, requestFile} from \"../../../services/Connection/Request\";\r\nimport {Path as Api} from \"./Types\";\r\n\r\n\r\n//\r\n\r\nexport const RequestApi = {\r\n    // ersal data be api login\r\n    SignIn: (data) => Request.post(\"auth/login\", data),\r\n    //ersal data be api register\r\n    SignUp: (data) => Request.post(\"auth/register\", data),\r\n    //ersal data be verifyActiveCode\r\n    VerifyCode: (data) => Request.post(\"auth/verifyActiveCode\", data),\r\n    // ersal data be api forgotPassword/sendActiveCode\r\n    ForgetPassword: (data) => Request.post(\"auth/forgotPassword/sendActiveCode\", data),\r\n    // ersal data be api resetPassword\r\n    NewPassword: (data) => Request.post(\"auth/resetPassword\", data),\r\n    // ersal data be api updateDetails\r\n    UserFirstData: (data) => Request.put(\"auth/updateDetails\", data),\r\n    // ersal data be api doctors\r\n    DoctorAdd: (data) => Request.post(\"doctors\", data),\r\n// ersal data be api doctors\r\n    AssistantAdd: (data) => Request.post(\"doctors\", data),\r\n    // uploaded file\r\n    Uploaded: (data) => Request.post(\"/auth/upload\", data),\r\n  \r\n}","//    -- action shamel functionhaei ast ke be request vasl mishavad\r\nimport $ from 'jquery';\r\nimport M from 'materialize-css';\r\nimport {RequestApi as request} from \"../api\"; // objecti shamel apiha\r\nimport {GetToken} from '../../../../services/Authentication/GetToken'\r\n\r\nconst FILE_CODE = \"clinic_img_1254\";\r\n\r\n// action marbout be singup\r\n// formdata => vorodi form value\r\nexport const SignUp = (formData) => {\r\n\r\n    //  tabdil dadeha vorudi be json mored niaz server\r\n    const JsonData = JSON.stringify({\r\n        phoneNumber: formData.phoneNumber,\r\n        accountType: 2\r\n    })\r\n\r\n    // send data be server tavasot request\r\n    return async (dispatch, getState) => {\r\n        // zadan darkhast be signup action api\r\n        await request.SignUp(JsonData)\r\n            .then(response => {\r\n                // dispatch kardan repsonse be reducer\r\n                dispatch({\r\n                    type: 'SIGN_UP_SUCCESS',\r\n                    response: response.data\r\n                })\r\n            }, error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// check verify code hengam register\r\n// voroudi => data form\r\nexport const VerifyCode = (data) => {\r\n\r\n    // daryaft 4 input value verify code be yek reshteh\r\n    var code = data.code_1 + data.code_2 + data.code_3 + data.code_4;\r\n\r\n\r\n    // sakht data json baraye ferestadan be api\r\n    const JsonData = JSON.stringify({\r\n        phoneNumber: data.phoneNumber,\r\n        code: code\r\n    })\r\n\r\n\r\n    //  ersal data be api va dispatch action marbute\r\n    return async (dispatch, getState) => {\r\n        await request.VerifyCode(JsonData)\r\n            .then(response => {\r\n                // dispatch response be reducer\r\n                dispatch({\r\n                    type: \"VERIFY_SUCCESS\",\r\n                    token: response.data.token\r\n                })\r\n            } , error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n// sabt data avalie fullname va password doctor\r\n// vorodi => data form\r\nexport const SetData = (data) => {\r\n    // tabdil form data be json\r\n    const JsonData = JSON.stringify({\r\n        fullName: data.fullname,\r\n        password: data.password\r\n    })\r\n\r\n\r\n    // ersal be samt server va dispatch kardan khoroji az api\r\n    return async (dispatch, getState) => {\r\n        await request.UserFirstData(JsonData)\r\n            .then(response => {\r\n                // response ferestadeh shode az api\r\n                dispatch({\r\n                    type: 'SET_DATA_SUCCESS',\r\n                    response: response\r\n                })\r\n            } , error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// sabt etelat takmili assistant\r\n// vorodi => form data\r\nexport const FitData = (data) => {\r\n    // tabdil dadeha be json\r\n    let JsonData = {};\r\n    if (data.isAssistance) {\r\n        JsonData = JSON.stringify({\r\n            isAssistant: true,\r\n            assistant: {\r\n                phoneNumber: data.phoneNumber,\r\n                description: data.description,\r\n                attachment: data.attachment\r\n            }\r\n        })\r\n    } else {\r\n        JsonData = JSON.stringify({\r\n            isAssistant: false,\r\n            attachment: data.attachment\r\n        })\r\n    }\r\n\r\n    const jsons = JSON.stringify({\r\n        isAssistant: true,\r\n        assistant: {\r\n            phoneNumber: data.phoneNumber,\r\n            description: data.description,\r\n            attachment: data.attachment\r\n        }\r\n    })\r\n    console.log(\"json prev : \", jsons);\r\n    console.log(\"json defualt : \", data);\r\n    console.log(\"json : \", JsonData);\r\n    return async (dispatch, getState) => {\r\n        // ersal data be method marbut be api doctor\r\n        await request.DoctorAdd(JsonData)\r\n            .then(response => {\r\n                // dispatch kardan response bargashti\r\n                console.log(\"respo : \", response)\r\n                dispatch({\r\n                    type: 'UPLOADED_OK',\r\n                    response: response\r\n                })\r\n            }, error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// sabt etelat takmili assistant\r\n// vorodi => form data\r\nexport const FitDataDoctor = (data) => {\r\n    // tabdil dadeha be json\r\n    const files = data.filePath ? data.filePath : '';\r\n    const JsonData = JSON.stringify({\r\n        isAssistant: data.isAssistant,\r\n        educationDegree: '',\r\n        educationField: '',\r\n        needAssistant: true,\r\n        attachment: [files],\r\n        grade: 0,\r\n        commissionRate: 0,\r\n        assistant: {\r\n            phoneNumber: '',\r\n            description: '',\r\n            attachment: [],\r\n            doctorsId: []\r\n        },\r\n    })\r\n\r\n    return async (dispatch, getState) => {\r\n        // ersal data be method marbut be api doctor\r\n        await request.DoctorAdd(JsonData)\r\n            .then(response => {\r\n                localStorage.removeItem(FILE_CODE)\r\n                // dispatch kardan response bargashti\r\n                dispatch({\r\n                    type: 'UPLOADED_OK',\r\n                    response: response\r\n                })\r\n            }, error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n// sabt etelat takmili assistant\r\n// vorodi => form data\r\nexport const FitDataAssistant = (data) => {\r\n    // tabdil dadeha be json\r\n\r\n    const files = data.attachment ? data.attachment : '';\r\n    const phoneNumber = data.doctors.dataUser.phoneNumber ? data.doctors.dataUser.phoneNumber : '';\r\n    const description = data.doctors.dataUser.description ? data.doctors.dataUser.description : '';\r\n    const JsonData = JSON.stringify({\r\n        isAssistant: data.doctors.dataUser.isAssistant,\r\n        needAssistant: false,\r\n        assistant: {\r\n            phoneNumber: phoneNumber,\r\n            description: description,\r\n            doctorsId: data.doctors.doctors,\r\n            attachment: [files],\r\n        },\r\n\r\n    })\r\n\r\n    return async (dispatch, getState) => {\r\n        // ersal data be method marbut be api doctor\r\n        console.log(\"dataaaaa : \", JSON.parse(JsonData));\r\n        await request.AssistantAdd(JSON.parse(JsonData))\r\n            .then(response => {\r\n                // dispatch kardan response bargashti\r\n                dispatch({\r\n                    type: 'UPLOADED_OK_ASSIS',\r\n                    responseAssis: response\r\n                })\r\n            }, error => {\r\n                M.toast({html: \"\" + error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html: \"Network has error ! try again ...\"})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// upload kardan file becdn\r\n// voroudi => input file\r\nexport const UploadedFile = (file) => {\r\n    // console.log(\"files : \" , file);\r\n    $(\"#check_phone_num\").fadeIn();\r\n    //dispatch karadan request\r\n    // estefade az async await baray asyncro kardan darkhast\r\n    return async (dispatch, getState) => {\r\n        localStorage.setItem(FILE_CODE, \"\");\r\n        // darkhast zadan be object request.uploaded va etesal be api\r\n        await request.Uploaded(file).then(\r\n            (response) => {\r\n                // if response ok bood\r\n                M.toast({html: \"Your Document is uploaded\"});\r\n                $(\"#loading_back\").fadeOut();\r\n                localStorage.setItem(FILE_CODE, JSON.stringify(response));\r\n                // if response eror bod\r\n            } , error => {\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }\r\n        ).catch(error => {\r\n            M.toast({html : \"Network has error! try again ...\"})\r\n        });\r\n    };\r\n};\r\n  ","//    -- action shamel functionhaei ast ke be request vasl mishavad\r\nimport React, {memo} from 'react';\r\nimport {RequestApi as request} from \"../api\";\r\nimport M from \"materialize-css\";\r\n// objecti shamel apiha\r\n\r\n// action marbout be Reset password\r\nexport const RePassword = (data) => {\r\n    // json kardan data form\r\n    const JsonData = JSON.stringify({\r\n        phoneNumber: data.phoneNumber,\r\n    });\r\n\r\n// ersal etellat be samt server va dispatch khoroji be samt reducer\r\n    return async (dispatch, getState) => {\r\n        // ersal data be method marbut be api forgetPassword\r\n        await request.ForgetPassword(JsonData)\r\n            .then(response => {\r\n                // dispatch kardan zamani ke response ok bood\r\n                dispatch({\r\n                    type: 'RE_PASS_OK',\r\n                    response: response\r\n                })\r\n                // dispatch kardan zamani ke response error bood\r\n            }, error =>{\r\n                M.toast({html : \"\"+error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html : 'Network has error! try again ...'})\r\n            })\r\n    }\r\n}\r\n// action setNewpassword baray set kardan password jadid\r\nexport const SetNewPassword = (data) => {\r\n    // json kardan data form\r\n    const JsonData = JSON.stringify({\r\n        password: data\r\n    });\r\n    // ersal etellat be samt server va dispatch khoroji be samt reducer\r\n    return async (dispatch, getState) => {\r\n        await request.NewPassword(JsonData)\r\n            // dispatch kardan zamini ke response ok bo\r\n            .then(response => {\r\n                dispatch({\r\n                    response: response,\r\n                    type: 'NEW_PASS_OK'\r\n                    // dispatch kardan zamini ke response error bod\r\n                })\r\n            }, error => {\r\n                M.toast({html: \"\" + error.response.data.error})\r\n            }).catch(error => {\r\n                M.toast({html: 'Network has error! try again ...'})\r\n            })\r\n    }\r\n}"],"sourceRoot":""}