{"version":3,"sources":["services/Authentication/GetToken.js","services/Authentication/LoginValidation.js","entity/Redux/Admin/Types.js","services/Authentication/Types.js","entity/Redux/Auth/reducer.js","entity/Redux/Auth/ForgetPasswrod/reducer.js","entity/Redux/Micro/SearchDoctor/Reducer.js","entity/Redux/Admin/Reduser.js","entity/Redux/Doctors/Reducer.js","entity/Model/Reducer/index.js","reportWebVitals.js","i18next.js","view/PageComponent/Doctor/Amap/Amap.js","view/PageComponent/Doctor/Amap/index.js","services/Routing/index.js","App.js","index.js","services/Authentication/index.js"],"names":["GetToken","localStorage","getItem","TOKEN_KEY","LoginValidation","ok_log","JSON","parse","CryptoJs","AES","decrypt","SECRET_KEY","toString","enc","Utf8","types","get_admin_dashboard_detail","path","get_dashboard_path","SECRET_USER_DATA","ACCOUTN_TYPE","initialState","res","token","resLog","resUpload","accountType","AuthReducer","state","action","type","response","error","resError","M","toast","html","setTimeout","window","location","pathname","InitialState","msg","RePassReducer","searchRes","MicroReducer","initialData","dashboard","doctors","oneDoctor","deleteDoctor","addSpecialty","getAllSpecialty","responseDel","users","patients","onePatient","UserAdmin","PackageAll","ClinicAll","ClinicOne","AdminReducer","responseAdmin","responseUser","responseGet","allPatients","GetMe","AssisReq","GetSinglePatient","GetAllPatientReq","UploadedRes","AllClinic","resDocClinic","ResSingleClinic","ScheduleList","Reducer","responseClinic","responseGetMe","responseAssis","responseLprtd","resSingleClinic","responseSche","combineReducers","Auth","RePass","Micro","Admin","Doctor","DoctorReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","react","useSuspense","layerStyle","padding","background","border","borderRadius","position","top","left","React","Component","AmapShow","createLazy","Route","lazy","Promise","resolve","AddClicnic","ClinicList","AdminDashboard","AdminUserManagement","AdminAuth","AuthView","AuthRePass","SetData","UploadFile","AssistantUploadFile","AuthNewPass","AdminReal","DoctorDashboard","AdminSettingFile","AdminTopUserManagement","ChatComponent","ChatComponentAdmin","PackageList","PackageEdit","DoctorPackageAdd","DoctorPackageList","NotFounding","AdminPackages","AdminPackagesEdit","AdminPackagesAdd","DoctorsList","CreateUser","Grades","DoctorListMicro","Schedule","ScheduleListAdmin","PatientList","Specialty","PatientProfile","AssistantRequest","DoctorChat","AdminCreateTest","DoctorPackAdd","PrivateAdminTop","component","RedirectPath","rPath","rest","render","props","to","PrivateAdmin","PrivateDoctor","PrivatePublic","memo","exact","App","fallback","Routing","fitStore","createStore","Store","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.52fea8ac.chunk.js","sourcesContent":["//    -- barrasi token baray check login boodan ya nabodan karbar\r\nimport {TOKEN_KEY, SECRET_KEY , ACCOUTN_TYPE} from \"./Types\"\r\nimport CryptoJs from \"crypto-js\";\r\n\r\nexport const GetToken = () => {\r\n\r\n    try {\r\n\r\n        // check va barrasi set budan token baraye auth\r\n        const token = localStorage.getItem(TOKEN_KEY);\r\n        return token;\r\n\r\n        // end token\r\n\r\n        // const hasLogin = localStorage.getItem(TOKEN_KEY) ? true : false;\r\n        // if (hasLogin) {\r\n        //     const data = localStorage.getItem(TOKEN_KEY);\r\n        //     const Bytes = CryptoJs.AES.decrypt(data, SECRET_KEY);\r\n        //     const decrypted = JSON.parse(Bytes.toString(CryptoJs.enc.Utf8));\r\n        //     const token = decrypted.token;\r\n        //     return token;\r\n        // } else return false\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default GetToken","import {TOKEN_KEY, SECRET_KEY} from \"./Types\";\r\nimport CryptoJs from 'crypto-js';\r\n\r\nexport const LoginValidation = () => {\r\n    try {\r\n        const ok_log = localStorage.getItem(TOKEN_KEY);\r\n        if (ok_log) {\r\n            const decrypt_token = JSON.parse(CryptoJs.AES.decrypt(ok_log, SECRET_KEY).toString(CryptoJs.enc.Utf8));\r\n            return decrypt_token;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch {\r\n        return false\r\n    }\r\n}","export const types = {\r\n    get_admin_dashboard_detail: \"get_admin_dashboard_detail\"\r\n}\r\nexport const path = {\r\n    get_dashboard_path : \"api_dashboard/\"\r\n\r\n}","\r\n//    -- static string ha\r\n\r\n\r\n// export const TOKEN_KEY = \"ErPl2B1S76_BICON_JMT_USER_LkVbA2021\";\r\nexport const TOKEN_KEY = \"ErPl2B1S76LkVA2021fukofBasE\"; // token string\r\nexport const SECRET_KEY = \"ErPl2B1S76LkVA2021\" // secret key baray estefade dar cryptojs\r\nexport const SECRET_USER_DATA = \"ErPl2B1S76LkVA20214512$#bdfb%%\" // not used :)\r\nexport const SIGN_UP_URL = \"user/register\"; // not used :)\r\nexport const DOCTOR_ID = \"doctorId12fd\";\r\nexport const ACCOUTN_TYPE = \"accou12nttYpes$8\";\r\n","\r\n//    -- reducer auth\r\n//    -- return respose be compoentn\r\n\r\n\r\nimport M from 'materialize-css';\r\n\r\n // state avalie va kham\r\nconst initialState = {\r\n    res: '',\r\n    token: '',\r\n    resLog: '',\r\n    resUpload : '',\r\n    accountType: ''\r\n};\r\n\r\n{/*\r\n    -- state => meghdar avalie initial state ast ke be responseha por mishavad\r\n    -- action => action yek object ast ke az samt action meghdar dehi mishavad\r\n*/}\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // baray zamanist ke sign_up ok boud\r\n        case 'SIGN_UP_SUCCESS' :\r\n            return {\r\n                ...state,\r\n                res: action.response\r\n            }\r\n        // baray zamanist ke sign_up error boud\r\n        case 'SIGN_UP_ERR' :\r\n            return {\r\n                ...state,\r\n                res: action.error\r\n            }\r\n        // baray zamanist ke sign_in ok boud\r\n        case 'SIGN_IN_SUCCESS' :\r\n            return {\r\n                ...state, resLog: action.response\r\n            }\r\n\r\n        // baray zamanist ke sign_in error boud\r\n        case 'SIGN_IN_ERROR' :\r\n            return {\r\n                ...state, resLog: action.resError\r\n            }\r\n\r\n        // baray zamanist ke set-data ok boud\r\n        case 'SET_DATA_SUCCESS' :\r\n            return {\r\n                ...state , resLog: action.response\r\n            }\r\n        // baray zamanist ke re-pass ok boud\r\n        case 'RE_PASS_OK' :\r\n            return {\r\n                ...state ,\r\n            }\r\n\r\n        // baray zamanist ke upload error boud\r\n        case 'UPLOADED_ERR' :\r\n            return {\r\n                ...state , resLog: 'An error has occurred! please try again...'\r\n            }\r\n        // baray zamanist ke reset_pass ok boud\r\n        case 'RESET_PASSWORD' :\r\n            return {\r\n                ...state, res: action.response\r\n            }\r\n\r\n        // baray zamanist ke verify_pass ok boud\r\n        case 'VERIFY_SUCCESS' :\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n\r\n        // baray zamanist ke code verify error boud\r\n        case 'CODE_ERR' :\r\n            return {\r\n                res: 'error in connection ...'\r\n            }\r\n        case 'UPLOADED_OK_ASSIS':\r\n            M.toast({html : 'please wait to redirect ...'})\r\n            setTimeout(()=>{\r\n                window.location.pathname = \"/doctor\"\r\n            })\r\n\r\n            // return state initial\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","const InitialState = {\r\n    response: '',\r\n    msg: ''\r\n}\r\n\r\nconst RePassReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case 'RE_PASS_OK' :\r\n            return {\r\n                ...state,\r\n                response: action.response,\r\n                msg: 'Check Verify Code please ...'\r\n            }\r\n        case 'NOT_FOUND' :\r\n            return {\r\n                ...state,\r\n                response: action.response,\r\n                msg: 'phoneNumber is not defined!'\r\n            }\r\n        case 'NEW_PASS_OK' :\r\n            return {\r\n                ...state,\r\n                response: action.response,\r\n            }\r\n        case 'NEW_PASS_ERROR' :\r\n            return {\r\n                ...state,\r\n                response: action.response\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default RePassReducer;","const initialState = {\r\n    searchRes: ''\r\n}\r\nconst MicroReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_SUCCESS' :\r\n            return {\r\n                ...state,\r\n                searchRes: action.response\r\n            }\r\n\r\n        case 'EMPTY_DATA' :\r\n            return {\r\n                ...state,\r\n                searchRes: action.response\r\n            }\r\n\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default MicroReducer;","import { types } from \"./Types\";\r\n\r\nconst initialData = {\r\n  dashboard: \"\",\r\n  doctors: \"\",\r\n  oneDoctor: \"\",\r\n  error: \"\",\r\n  deleteDoctor: \"\",\r\n  addSpecialty: \"\",\r\n  getAllSpecialty: \"\",\r\n  responseDel: \"\",\r\n  users :'',\r\n  patients : '',\r\n  onePatient : '',\r\n  UserAdmin : '',\r\n  PackageAll : '',\r\n  ClinicAll : '',\r\n  ClinicOne : '',\r\n};\r\nconst AdminReducer = (state = initialData, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ALL_OK\":\r\n      return {\r\n        ...state,\r\n        doctors: action.response,\r\n      };\r\n\r\n      case \"USER_ADMIN\" : \r\n      return {\r\n        ...state,\r\n        UserAdmin : action.responseAdmin\r\n      }\r\n\r\n    case \"GET_CLININC_SINGLE\" :\r\n      return {\r\n        ...state,\r\n        ClinicOne : action.response\r\n      }\r\n\r\n    case \"GET_ALL_CLINIC\" :\r\n      return {\r\n        ...state ,\r\n        ClinicAll : action.response\r\n      }\r\n\r\n    case 'GET_ALL_PACK' :\r\n      return {\r\n        ...state,\r\n        PackageAll : action.response\r\n      }\r\n      case \"GET_ALL_PATIENT\":\r\n      return {\r\n        ...state,\r\n        patients: action.response,\r\n      };\r\n\r\n    case \"GET_ALL_OK_USER\" :\r\n      return {\r\n        ...state,\r\n        users : action.responseUser\r\n      }\r\n    case \"GET_DOCTOR\":\r\n      return {\r\n        ...state,\r\n        oneDoctor: action.response,\r\n      };\r\n\r\n\r\n      case \"GET_PATIENT\":\r\n      return {\r\n        ...state,\r\n        onePatient: action.response,\r\n      };\r\n\r\n    case \"GET_ALL_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: \"try again ...\",\r\n      };\r\n    case \"DELETE_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        deleteDoctor: action.response,\r\n      };\r\n    case \"ADD_SPECIALTY\":\r\n      return {\r\n        ...state,\r\n        addSpecialty: action.response,\r\n      };\r\n\r\n    case \"GET_ALL_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        getAllSpecialty: action.responseGet,\r\n      };\r\n    case \"ERROR_CREATE\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case \"DELETE_SPECILTY\":\r\n      return {\r\n        ...state,\r\n        responseDel: action.responseDel,\r\n      };\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import M from \"materialize-css\";\r\n\r\nconst initialState = {\r\n    allPatients: \"\",\r\n    GetMe: \"\",\r\n    AssisReq: \"\",\r\n    GetSinglePatient: \"\",\r\n    GetAllPatientReq: \"\",\r\n    UploadedRes: '',\r\n    AllClinic: '',\r\n    resDocClinic: '',\r\n    ResSingleClinic: '',\r\n    ScheduleList: '',\r\n    PackageAll: '',\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_ALL_PATIENT_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                allPatients: action.response,\r\n            };\r\n\r\n        case 'GET_ALL_CLINIC_DOCTOR' :\r\n            return {\r\n                ...state,\r\n                AllClinic: action.responseClinic\r\n            }\r\n        case \"GET_ME\":\r\n            return {\r\n                ...state,\r\n                GetMe: action.responseGetMe,\r\n            };\r\n\r\n        case \"GET_ALL_PACK_DOCTOR\" :\r\n            return {\r\n                ...state,\r\n                PackageAll: action.response\r\n            };\r\n\r\n        case \"ALL_REQ_ASSIS\":\r\n            return {\r\n                ...state,\r\n                AssisReq: action.responseAssis,\r\n            };\r\n\r\n        case \"UPLOADED_OK\": {\r\n            M.toast({html: \"please wait to redirect to panel ...\"});\r\n            setTimeout(() => {\r\n                window.location.pathname = \"/doctor\";\r\n            }, 1000);\r\n        }\r\n        case \"SINGLE_PATIENT_OK\":\r\n            return {\r\n                ...state,\r\n                GetSinglePatient: true,\r\n            };\r\n\r\n        case \"CONFIRM_PATIENT\":\r\n            return {\r\n                ...state,\r\n                GetAllPatientReq: action.responseLprtd,\r\n            };\r\n\r\n        case \"UPLOADED_CLINIC_OK\":\r\n            return {\r\n                ...state,\r\n                UploadedRes: action.response,\r\n            };\r\n\r\n\r\n        case 'DOCTOR_CLINIC_GET' :\r\n            return {\r\n                ...state,\r\n                resDocClinic: action.resDocClinic\r\n            }\r\n\r\n        case 'GET_SINGLE_CLINIC_DOCTOR' :\r\n            return {\r\n                ...state,\r\n                ResSingleClinic: action.resSingleClinic\r\n            }\r\n\r\n        case 'SCHADULE_LIST' :\r\n            return {\r\n                ...state,\r\n                ScheduleList: action.responseSche\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Reducer;\r\n","\r\n//    -- reducer asli\r\n//    -- combine va export kardan reducerha baray estefade dar store index.js\r\n\r\n\r\nimport {combineReducers} from \"redux\";\r\nimport AuthReducer from '../../Redux/Auth/reducer'; // reducer authentication\r\nimport RePass from '../../Redux/Auth/ForgetPasswrod/reducer'; // reducer bakhsh RePass\r\nimport MicroReducer from \"../../Redux/Micro/SearchDoctor/Reducer\";\r\nimport AdminReducer from \"../../Redux/Admin/Reduser\";\r\nimport DoctorReducer from '../../Redux/Doctors/Reducer';\r\n// combine kardan reducerha\r\nexport default combineReducers({\r\n    Auth : AuthReducer,\r\n    RePass,\r\n    Micro : MicroReducer,\r\n    Admin : AdminReducer,\r\n    Doctor : DoctorReducer,\r\n})\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from 'i18next';\r\nimport {initReactI18next} from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nconst Language = ['en', 'ch'];\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n        whitelist: Language,\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        react : {\r\n            useSuspense : false\r\n        }\r\n    });\r\n\r\n\r\nexport default i18n;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nimport { Map, MouseTool } from 'react-amap';\r\n\r\nconst layerStyle = {\r\n  padding: '10px',\r\n  background: '#fff',\r\n  border: '1px solid #ddd',\r\n  borderRadius: '4px',\r\n  position: 'absolute',\r\n  top: '10px',\r\n  left: '10px'\r\n};\r\n\r\nclass Amap extends React.Component{\r\n  constructor(){\r\n    super();\r\n    const self =this;\r\n    this.state = {\r\n      what: '点击下方按钮开始绘制'\r\n    };\r\n    this.toolEvents = {\r\n      created: (tool) => {\r\n        console.log(tool)\r\n        self.tool = tool;\r\n      },\r\n      draw({obj}) {\r\n        console.log(\"props : \", obj.getPosition())\r\n        self.drawWhat(obj);\r\n      }\r\n    }\r\n    this.mapPlugins = ['ToolBar'];\r\n    this.mapCenter = {longitude: 120, latitude: 35};\r\n  }\r\n\r\n  \r\n\r\n  drawWhat(obj) {\r\n    let text = '';\r\n    switch(obj.CLASS_NAME) {\r\n      case 'AMap.Marker':\r\n       text = `你绘制了一个标记，坐标位置是 {${obj.getPosition()}}`;\r\n       break;\r\n    \r\n      default:\r\n        text = '';\r\n    }\r\n    this.setState({\r\n      what: text\r\n    });\r\n  }\r\n  \r\n  drawMarker(){\r\n    if (this.tool){\r\n      this.tool.marker();\r\n      this.setState({\r\n        what: '准备绘制坐标点'\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  close(){\r\n    if (this.tool){\r\n      this.tool.close();\r\n    }\r\n    this.setState({\r\n      what: '关闭了鼠标工具'\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    return <div>\r\n      <div style={{width: '100%', height: 370}}>\r\n        <Map \r\n        amapkey={'79f4e464d0173234eee9dc574e89edd9'}\r\n          plugins={this.mapPlugins}\r\n          center={this.mapCenter}\r\n        >\r\n          <MouseTool events={this.toolEvents}/>\r\n          <div style={layerStyle}>{this.state.what}</div>\r\n        </Map>\r\n       </div>\r\n       <button onClick={()=>{this.drawMarker()}}>Draw Marker</button>\r\n       <button onClick={()=>{this.close()}}>Close</button>\r\n     </div>\r\n  }\r\n}\r\n\r\nexport default Amap;","import React , {useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Amap from \"./Amap\";\r\n\r\n\r\nfunction AmapShow () {\r\n    useEffect(() => {\r\n        ReactDOM.render(<Amap />, document.getElementById(\"maps\"));\r\n    }, [])\r\n    return (\r\n         <div id=\"maps\"></div>\r\n    )\r\n}\r\n\r\nexport default AmapShow;","import React, { lazy, memo } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { LoginValidation } from \"../Authentication/LoginValidation\";\r\nimport { GetToken } from \"../Authentication\";\r\nimport { ACCOUTN_TYPE } from \"./../Authentication/Types\";\r\nimport AmapShow from \"../../view/PageComponent/Doctor/Amap\";\r\n\r\nlet accountType = localStorage.getItem(ACCOUTN_TYPE);\r\n\r\n\r\nexport const createLazy = (Route) => {\r\n  const component = lazy(() => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(Route);\r\n      }, 1000);\r\n    });\r\n  });\r\n  return component;\r\n};\r\n\r\nconst AddClicnic = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/AddClinic\")\r\n);\r\nconst ClinicList = createLazy(\r\n  import(\"../../view/PageComponent/Admin/ClinicList\")\r\n);\r\nconst AdminDashboard = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Dashboard\")\r\n);\r\nconst AdminUserManagement = createLazy(\r\n  import(\"../../view/PageComponent/Admin/UserMangement\")\r\n);\r\n\r\nconst AdminAuth = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/Auth/AdminLogin\")\r\n);\r\n\r\nconst AuthView = createLazy(import(\"../../view/PageComponent/Auth\"));\r\nconst AuthRePass = createLazy(\r\n  import(\"../../view/PageComponent/Auth/ForgetPassword\")\r\n);\r\nconst SetData = createLazy(import(\"../../view/PageComponent/Auth/SetData\")); // private sigup\r\nconst UploadFile = createLazy(\r\n  import(\"../../view/PageComponent/Auth/UploadFile/Doctor\")\r\n); // private sigup\r\nconst AssistantUploadFile = createLazy(\r\n  import(\"../../view/PageComponent/Auth/UploadFile/Assistant\")\r\n); // private sigup\r\nconst AuthNewPass = createLazy(import(\"../../view/PageComponent/Auth/NewPass\"));\r\nconst AdminReal = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/Dashboard\")\r\n);\r\nconst DoctorDashboard = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Dashboard\")\r\n);\r\nconst AdminSettingFile = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/Setting\")\r\n);\r\nconst AdminTopUserManagement = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/UserMangement\")\r\n);\r\nconst ChatComponent = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/Chat\")\r\n);\r\nconst ChatComponentAdmin = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Chat\")\r\n);\r\nconst PackageList = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Package/Components/PakacgeList\")\r\n);\r\nconst PackageEdit = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Package/Components/PackageEdit\")\r\n);\r\nconst DoctorPackageAdd = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Package/Components/PackageAdd\")\r\n);\r\nconst DoctorPackageList = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Package/Components/PakacgeList\")\r\n);\r\nconst NotFounding = createLazy(import(\"../../view/PageComponent/Nothing\"));\r\nconst AdminPackages = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Package/Components/PakacgeList\")\r\n);\r\nconst AdminPackagesEdit = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Package/Components/PackageEdit\")\r\n);\r\nconst AdminPackagesAdd = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Package/Components/PackageAdd\")\r\n);\r\nconst DoctorsList = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Doctors\")\r\n);\r\nconst CreateUser = createLazy(\r\n  import(\"../../view/PageComponent/AdminReal/CreateUser\")\r\n);\r\nconst Grades = createLazy(import(\"../../view/PageComponent/Admin/Grades\"));\r\nconst DoctorListMicro = createLazy(import(\"../../view/MicroPage/DoctorList\"));\r\nconst Schedule = createLazy(import(\"../../view/PageComponent/Doctor/Schedule\"));\r\nconst ScheduleList = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/ScheduleList\")\r\n);\r\nconst ScheduleListAdmin = createLazy(\r\n  import(\"../../view/PageComponent/Admin/ScheduleList\")\r\n);\r\nconst PatientList = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Patient\")\r\n);\r\nconst Specialty = createLazy(\r\n  import(\"../../view/PageComponent/Admin/Specialty\")\r\n);\r\nconst PatientProfile = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/PatientDetail\")\r\n);\r\nconst AssistantRequest = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/AssistantReq\")\r\n);\r\nconst DoctorChat = createLazy(import(\"../../view/PageComponent/Doctor/Chat\"));\r\nconst AdminCreateTest = createLazy(\r\n  import(\"../../view/PageComponent/Admin/TestCreate\")\r\n);\r\nconst DoctorPackAdd = createLazy(\r\n  import(\"../../view/PageComponent/Doctor/Package/Components/PackageAdd\")\r\n);\r\n\r\nconst Test = createLazy(import(\"../../view/test\"));\r\n\r\nexport const PrivateAdminTop = ({\r\n  component: Component,\r\n  rPath: RedirectPath,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        GetToken() && accountType == 4 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={RedirectPath} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const PrivateAdmin = ({\r\n  component: Component,\r\n  rPath: RedirectPath,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        GetToken() && accountType == 3 ? <Component {...props} /> : <Redirect to={RedirectPath} />\r\n      }\r\n    />\r\n  );\r\n};\r\nexport const PrivateDoctor = ({\r\n  component: Component,\r\n  rPath: RedirectPath,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        GetToken() && accountType == 2 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={RedirectPath} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const PrivatePublic = ({\r\n  component: Component,\r\n  rPath: RedirectPath,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        GetToken() ? <Component {...props} /> : <Redirect to={RedirectPath} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const Public = ({ component: Component, ...rest }) => {\r\n  // console.log(\"rest : \" , rest)\r\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n};\r\n\r\nexport const PrivateCompoenent = ({ component: Component, ...rest }) => {\r\n  return LoginValidation() ? (\r\n    <Component {...rest} />\r\n  ) : // redirect to acccess denied\r\n  null;\r\n};\r\n\r\nexport default memo(() => {\r\n  return (\r\n    <Switch>\r\n \r\n \r\n      {/* doctor Route */}\r\n\r\n      <PrivateDoctor\r\n        component={AddClicnic}\r\n        path={\"/add-clinic\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={ClinicList}\r\n        path={\"/clinic-list\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={DoctorDashboard}\r\n        path={\"/doctor\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={Schedule}\r\n        path={\"/schedule/:id\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={ScheduleList}\r\n        path={\"/schedule-list\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={DoctorChat}\r\n        path={\"/doctor-chat/:id\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n\r\n        <PrivateDoctor\r\n            component={DoctorPackageAdd}\r\n            path={\"/doctor-add-package\"}\r\n            rPath={\"/signin\"}\r\n        />\r\n\r\n\r\n        <PrivateDoctor\r\n            component={DoctorPackageList}\r\n            path={\"/doctor-list-package\"}\r\n            rPath={\"/signin\"}\r\n        />\r\n\r\n      <PrivateDoctor\r\n        component={PatientProfile}\r\n        path={\"/patient-profile\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={DoctorPackAdd}\r\n        path={\"/doctor-package-add\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={AssistantRequest}\r\n        path={\"/assistant-request\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateDoctor\r\n        component={AssistantRequest}\r\n        path={\"/assistant-request\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n\r\n      {/* admin top route */}\r\n\r\n      <PrivateAdminTop\r\n        component={AdminSettingFile}\r\n        path={\"/setting-file\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdminTop\r\n        component={AdminReal}\r\n        path={\"/admin-top\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdminTop\r\n        component={AdminTopUserManagement}\r\n        path={\"/user-manage\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdminTop component={Grades} path={\"/grades\"} rPath={\"/signin\"} />\r\n      <PrivateAdmin\r\n        component={Specialty}\r\n        path={\"/specialty\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdminTop\r\n        component={CreateUser}\r\n        path={\"/create-user\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n\r\n      {/* user admin route */}\r\n\r\n      <PrivateAdmin\r\n        component={AdminDashboard}\r\n        path={\"/admin\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={AdminUserManagement}\r\n        path={\"/admin-user-management\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={AdminPackages}\r\n        path={\"/adminp\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={AdminPackagesEdit}\r\n        path={\"/adminp-e\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={AdminPackagesAdd}\r\n        path={\"/adminp-a\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={ChatComponent}\r\n        path={\"/chat\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={PatientList}\r\n        path={\"/patient-list\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={DoctorsList}\r\n        path={\"/doctors-list\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={ScheduleListAdmin}\r\n        path={\"/schedule-list-admin\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n      <PrivateAdmin\r\n        component={AdminCreateTest}\r\n        path={\"/create-test\"}\r\n        rPath={\"/signin\"}\r\n      />\r\n\r\n\r\n\r\n\r\n      <Route component={ChatComponentAdmin} path={\"/chat-admin\"} />\r\n\r\n      <Route component={DoctorListMicro} path={\"/doctor-search\"} />\r\n\r\n      {/* doctor route */}\r\n      <Route component={AdminAuth} path={\"/admin-login\"} />\r\n\r\n      <Route component={AuthView} exact path={\"/\"} />\r\n      <Route component={AuthView} exact path={\"/signin\"} />\r\n      {/*<Route component={UserData} path={\"/your-password\"}/>*/}\r\n      <Route component={SetData} path={\"/your-details\"} />\r\n      <Route component={AuthRePass} path={\"/repass\"} />\r\n      <PrivatePublic\r\n        component={AuthNewPass}\r\n        path={\"/newpass\"}\r\n        rPath={\"/repass\"}\r\n      />\r\n      <Route component={UploadFile} path={\"/upload-file\"} />\r\n      <Route component={AssistantUploadFile} path={\"/upload-file-assistant\"} />\r\n\r\n      <Route component={PackageList} path={\"/package-list\"} rPath={\"/signin\"} />\r\n      <Route component={PackageEdit} path={\"/package-edit\"} rPath={\"/signin\"} />\r\n\r\n      <Route component={NotFounding} path={\"*\"} />\r\n\r\n      {/*             micro components          */}\r\n    </Switch>\r\n  );\r\n});\r\n","import React, {Suspense} from \"react\";\r\nimport {BrowserRouter as Router}  from \"react-router-dom\";\r\nimport RoutingPath from \"./services/Routing\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {Map} from \"react-amap\";\r\n// import BrowserHistory from \"./entity/Model/History/BrowserHistory\";\r\n// import history from './entity/Model/History/BrowserHistory';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={() => <div>loading ...</div>}>\r\n                {/* <Map amapkey={\"79f4e464d0173234eee9dc574e89edd9\"} version={2} /> */}\r\n                <RoutingPath/>\r\n            </Suspense>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Store from './entity/Model/Reducer'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware , createStore} from \"redux\";\r\nimport './i18next';\r\nimport App from './App';\r\nimport thunk from \"redux-thunk\";\r\nimport {Map} from 'react-amap';\r\nconst fitStore = createStore(Store , applyMiddleware(thunk))\r\nReactDOM.render(\r\n    <Provider store={fitStore}>\r\n            <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();","export {GetToken} from './GetToken'"],"sourceRoot":""}